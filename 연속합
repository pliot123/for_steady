#include <iostream>
#include <algorithm>
using namespace std;
int arr[100001];
int dp[100001] = { 0, };
int main() {
    int n, i;
    cin >> n;
    for (i = 0; i < n; i++) {
        cin >> arr[i];
        dp[i] = arr[i];
    }
    int sum = dp[0];
    for (i = 1; i < n; i++) {
        dp[i] = max(dp[i], dp[i - 1] + arr[i]);
        if (dp[i] > sum) {
            sum = dp[i];
        }
    }
    cout << sum ;
    return 0;
}

dp[i] = max(dp[i], dp[i - 1] + arr[i]);
점화식이 되게 간단하다. 상승세에 있으면 sum값을 계속 갱신해주고 하락세가 있으면 현재까지 최댓값을 저장해뒀다가 또 더 큰 상승세를 받으면 갱신해주면 된다.
