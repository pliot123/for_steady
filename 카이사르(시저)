import os, sys

Diagram=['TH','HE','IN','ER','AN','RE','ED','ON','ES','ST','EN','AT','TO','NT','HA','ND','OU','EA','NG','AS','OR','TI','IS','ET','AR','TE','SE','HI','OF']#29개
Trigram=['THE','ING','AND','HER','ERE','ENT','THA','NTH','WAS','ETH','FOR','DTH']#12개
Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
pt_freq = [0] * 26

print("문자열 입력: ")
msg=input()#입력
for ch in msg:
    if ch in Alphabet:
        idx = Alphabet.find(ch)
        pt_freq[idx] += 1
#print("평문 파일에 대한 알파벳 빈도수")
#for i in range(0,26):
#   print(Alphabet[i], ":", pt_freq[i])

#최상위 값 5개 뽑기
temp=pt_freq.copy()
temp.sort(reverse=True)

max_list=list()
for i in range(5): 
    max_list.append(temp[i])

idx_list=list()
for i in range(26):
    if pt_freq[i]==max_list[0] or pt_freq[i]==max_list[1]or pt_freq[i]==max_list[2]or pt_freq[i]==max_list[3]or pt_freq[i]==max_list[4]:
        idx_list.append(i)
#인덱스까지 다 뽑아냈음
k=len(idx_list)
strlen=len(msg)
v=list()
print("암호 해독중...")

for i in range(k): 
    s=""
    for j in range(strlen):
        if msg[j] == chr(ord('A')+idx_list[i]):
            s+='E'
        else:
            s+=chr(ord('A')+ ((ord(msg[j])-4)%26))
    print(s)

    
    cnt=0
    for k in range(strlen-2):
        comp=""
        comp +=s[k]
        comp +=s[k+1]
        comp +=s[k+2]
        for start in range(12):
            if comp==Trigram[start]:
                cnt+=1
    for k in range(strlen-1):
        qq=""
        qq +=s[k]
        qq +=s[k+1]
        for start in range(29):
            if qq==Diagram[start]:
                cnt+=1 
    print(cnt)
    v.append(cnt)

size=len(v)
max=0
idx=0
for i in range(size):
    if v[i]>max:
        max=v[i]
        idx=i+1

print("제일 합리적인 문장은 ",idx , "번째이다")

#RVJZJSRJVUFERUVJZXEGIZETZGCVBEFNERJRJLSJKZKLKZFEGVIDLKRKZFEEVKNFIBREUZJVWWZTZVEKZESFKYJFWKNRIVREUYRIUNRIV

#pt_freq에 담긴 값 0 2 1 1 12 7 3 0 6 9 9 3 0 4 0 0 0 11 3 2 5 10 3 1 2 11
#상위 5개 배열 담
