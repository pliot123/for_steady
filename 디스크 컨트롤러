#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

struct compare {
    bool operator()(vector<int> a, vector<int> b) {
        return a[1] > b[1];
    }
};

int solution(vector<vector<int>> jobs) {
    int answer = 0;
    priority_queue<vector<int>, vector<vector<int>>, compare> pq;
    int cur_time = 0; //현재시간
    int cnt = 0;   //우선순위 큐에 들어간 작업의 개수
    sort(jobs.begin(), jobs.end());

    while (cnt < jobs.size() || !pq.empty()) {
        if (cnt < jobs.size() && jobs[cnt][0] <= cur_time) {
            pq.push(jobs[cnt++]);
            continue;
        }
        if (!pq.empty()) {
            cur_time += pq.top()[1];
            answer += cur_time - pq.top()[0];
            pq.pop();
        }
        else {
            cur_time = jobs[cnt][0];
        }
    }

    return answer / jobs.size();
    

    /*for (int i = 0; i < jobs.size(); i++) {
        cout << jobs[i][0] << ' ' << jobs[i][1] << endl;
    }

    cout << "ENDENDENDENDENDENDENDENDENDENDENDENDENDEND" << endl;
    for (int i = 0; i < jobs.size(); i++) {
        pq.push({ jobs[i][0],jobs[i][1] });
    }

    while (!pq.empty()) {
        cout << pq.top()[0] << ' ' << pq.top()[1] << endl;
        pq.pop();
    }*/
}
int main() {
    vector<vector<int>> v = { {24, 10},{28, 39},{43, 20},{37, 5},{47, 22},{20, 47},{15, 34},{15, 2},{35, 43},{26, 1 } };
   cout << solution(v);
   return 0;
}
