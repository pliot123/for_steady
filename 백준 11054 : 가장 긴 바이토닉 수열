가장 긴 바이토닉 부분 수열 성공

 
시간 제한메모리 제한제출정답맞힌 사람정답 비율
1 초	256 MB	32094	16332	12802	50.862%
문제
수열 S가 어떤 수 Sk를 기준으로 S1 < S2 < ... Sk-1 < Sk > Sk+1 > ... SN-1 > SN을 만족한다면, 그 수열을 바이토닉 수열이라고 한다.

예를 들어, {10, 20, 30, 25, 20}과 {10, 20, 30, 40}, {50, 40, 25, 10} 은 바이토닉 수열이지만,  {1, 2, 3, 2, 1, 2, 3, 2, 1}과 {10, 20, 30, 40, 20, 30} 은 바이토닉 수열이 아니다.

수열 A가 주어졌을 때, 그 수열의 부분 수열 중 바이토닉 수열이면서 가장 긴 수열의 길이를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 수열 A의 크기 N이 주어지고, 둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ N ≤ 1,000, 1 ≤ Ai ≤ 1,000)

출력
첫째 줄에 수열 A의 부분 수열 중에서 가장 긴 바이토닉 수열의 길이를 출력한다.



예제 입력 1 복사
10
1 5 2 1 4 3 4 5 2 1
예제 출력 1 복사
7
힌트
예제의 경우 {1 5 2 1 4 3 4 5 2 1}이 가장 긴 바이토닉 부분 수열이다.





코드

#include <iostream>
#include <string>
using namespace std;
int dp1[1001];
int dp2[1001];
int arr[1001];
int main() {
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> arr[i];
    
    
    
    for (int i = 1; i <= n; i++) {
        dp1[i] = 1;
        for (int j = 1; j <= i; j++) {
            if (arr[i] > arr[j] && dp1[i] < dp1[j] + 1)
                dp1[i] = dp1[j] + 1;
        }
    }

    for (int i = n; i >= 1; i--) {
        dp2[i] = 1;
        for (int j = n; j >= i; j--) {
            if (arr[i] > arr[j] && dp2[i] < dp2[j] + 1)
                dp2[i] = dp2[j] + 1;
        }
    }
    int m = 0;

    for (int i = 1; i <= n; i++) {
        if(m<(dp1[i]+dp2[i]))
            m=dp1[i]+dp2[i];
    }

    cout << m - 1 << endl;
    return 0;
}
