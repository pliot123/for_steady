타임머신 성공

 
시간 제한메모리 제한제출정답맞힌 사람정답 비율
1 초	256 MB	41206	7566	4724	21.718%
문제
N개의 도시가 있다. 그리고 한 도시에서 출발하여 다른 도시에 도착하는 버스가 M개 있다. 각 버스는 A, B, C로 나타낼 수 있는데, A는 시작도시, B는 도착도시, C는 버스를 타고 이동하는데 걸리는 시간이다. 시간 C가 양수가 아닌 경우가 있다. C = 0인 경우는 순간 이동을 하는 경우, C < 0인 경우는 타임머신으로 시간을 되돌아가는 경우이다.

1번 도시에서 출발해서 나머지 도시로 가는 가장 빠른 시간을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 도시의 개수 N (1 ≤ N ≤ 500), 버스 노선의 개수 M (1 ≤ M ≤ 6,000)이 주어진다. 둘째 줄부터 M개의 줄에는 버스 노선의 정보 A, B, C (1 ≤ A, B ≤ N, -10,000 ≤ C ≤ 10,000)가 주어진다. 

출력
만약 1번 도시에서 출발해 어떤 도시로 가는 과정에서 시간을 무한히 오래 전으로 되돌릴 수 있다면 첫째 줄에 -1을 출력한다. 그렇지 않다면 N-1개 줄에 걸쳐 각 줄에 1번 도시에서 출발해 2번 도시, 3번 도시, ..., N번 도시로 가는 가장 빠른 시간을 순서대로 출력한다. 만약 해당 도시로 가는 경로가 없다면 대신 -1을 출력한다.

예제 입력 1 복사
3 4
1 2 4
1 3 3
2 3 -1
3 1 -2
예제 출력 1 복사
4
3
예제 입력 2 복사
3 4
1 2 4
1 3 3
2 3 -4
3 1 -2
예제 출력 2 복사
-1
예제 입력 3 복사
3 2
1 2 4
1 2 3
예제 출력 3 복사
3
-1
출처
어색한 표현을 찾은 사람: alex9801, myungwoo, rim
문제를 만든 사람: baekjoon
데이터를 추가한 사람: djm03178, doju, ganghe74
알고리즘 분류
그래프 이론
벨만–포드


벨만포드 알고리즘 문제이다.



#include<iostream>
#include<vector>
using namespace std;
#define INF 987654321
struct info {
	int from, to, weight;
};
vector<info> graph;
int V, E;
long long d[501];
void BellmanFord() {
	d[1] = 0;
	for (int i = 1; i <= V-1; i++) {
		for (int j = 0; j < E; j++) {
			int from = graph[j].from;
			int to = graph[j].to;
			int weight = graph[j].weight;

			if (d[from] == INF)continue;
			if (d[to] > d[from] + weight)d[to] = d[from] + weight;
		}
	}
	for (int j = 0; j < E; j++) {
		int from = graph[j].from;
		int to = graph[j].to;
		int weight = graph[j].weight;

		if (d[from] == INF)continue;
		if (d[to] > d[from] + weight) {
			cout << -1; 
			return;
		}
	}
	for (int i = 2; i <=V; i++)
		if (d[i] == INF)
			cout << -1 << endl;
		else
			cout << d[i] << ' ' << endl;
}

int main() {

	cin >> V >> E;
	
	for (int i = 1; i <= V; i++)d[i] = INF;

	for (int i = 0; i < E; i++) {
		int a, b, c;
		cin >> a >> b >> c;
		graph.push_back({ a,b,c });
	}
	BellmanFord();

	return 0;
}
재밌게 공부했다ㅎ_ㅎ
근데 왜 N-1번이나 모든 간선을 탐험해야하는지 잘 모르겠다 아무도 알려주지않는다.

대충 느낌적인 느낌은 알고있는데, 정확하게 알려줄사람 있으면 좋겠다.ㅠ_ㅠ
