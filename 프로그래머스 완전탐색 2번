#include <string>
#include <vector>
#include <algorithm>
#include <math.h>

using namespace std;

bool sosu(int num) {
    if (num < 2) return false;
    int a = (int)sqrt(num);
    for (int i = 2; i <= a; i++) if (num % i == 0) return false;
    return true;
}

int solution(string numbers) {
    int answer = 0; 
    vector<char> v; // 종이 조각의 각 숫자 저장 
    vector<int> nums; // 종이 조각으로 만들 수 있는 모든 수 저장 

    // numbers의 각 숫자를 v에 입력 후 오름차순 정렬 
    for (int i = 0; i < numbers.size(); i++)
        v.push_back(numbers[i]); 
    sort(v.begin(), v.end()); 
    do { 
        string temp = ""; // 만들 수 있는 모든 숫자 nums에 저장 
        for (int i = 0; i < v.size(); i++) { 
        temp.push_back(v[i]); 
        nums.push_back(stoi(temp)); 
        } 
    } while (next_permutation(v.begin(), v.end()));
    
    // 중복 값 지우기 
    sort(nums.begin(), nums.end()); 
    nums.erase(unique(nums.begin(), nums.end()), nums.end()); 
    
    for (int i = 0; i < nums.size(); i++) // 소수일 경우 answer++ 
        if (sosu(nums[i])) 
            answer++;

    return answer;

    // 소수 판별
    // numbers로 만들 수 있는 모든 경우의 수 찾아내기
    //1개 일때 , 2 개 일때 
}
