네트워크
문제 설명
네트워크란 컴퓨터 상호 간에 정보를 교환할 수 있도록 연결된 형태를 의미합니다. 예를 들어, 컴퓨터 A와 컴퓨터 B가 직접적으로 연결되어있고, 컴퓨터 B와 컴퓨터 C가 직접적으로 연결되어 있을 때 컴퓨터 A와 컴퓨터 C도 간접적으로 연결되어 정보를 교환할 수 있습니다. 따라서 컴퓨터 A, B, C는 모두 같은 네트워크 상에 있다고 할 수 있습니다.

컴퓨터의 개수 n, 연결에 대한 정보가 담긴 2차원 배열 computers가 매개변수로 주어질 때, 네트워크의 개수를 return 하도록 solution 함수를 작성하시오.

제한사항
컴퓨터의 개수 n은 1 이상 200 이하인 자연수입니다.
각 컴퓨터는 0부터 n-1인 정수로 표현합니다.
i번 컴퓨터와 j번 컴퓨터가 연결되어 있으면 computers[i][j]를 1로 표현합니다.
computer[i][i]는 항상 1입니다.
입출력 예ncomputersreturn
3	[[1, 1, 0], [1, 1, 0], [0, 0, 1]]	2
3	[[1, 1, 0], [1, 1, 1], [0, 1, 1]]	1
입출력 예 설명
예제 #1
아래와 같이 2개의 네트워크가 있습니다.


예제 #2
아래와 같이 1개의 네트워크가 있습니다.


#include <string>
#include <vector>

using namespace std;
int visited[201];
void dfs(int x, int n, vector<vector<int>> computers)
{
    visited[x]=1;
    for(int i =0; i<n;i++){
        if(visited[i]==0 && computers[x][i] == 1){
            dfs(i,n,computers);
        }
    }

}

int solution(int n, vector<vector<int>> computers) {
    int answer=0;
    for(int i=0; i<n;i++)
    {
        if(visited[i]==0){
            dfs(i,n,computers);
            answer++;
            }
    }
    return answer;
}
dfs로 풀었다. 내풀이 들어가서 긁어오면 코드를 깔끔하게 보기 좋은형태로 가져올 수 있다는 걸 이제 알았다.

solution함수안에서 dfs를 시작하면  인덱스 0부터 연결된 곧으로 dfs를 돌린다. 

2번 예제

1 1 0

1 1 1

0 1 1 

첫줄부터 0->1 로 길이 나있고 1에 들어가면 1-> 2로 가는 새로운 루트가 나온다.

그렇다면? 0 1 2는 다 연결되어있다고 보면 된다.



1번예제 

1 1 0 

1 1 0

0 0 1

다시 첫줄부터 0->1로 길이 나있고 

1로 들어가면 0으로밖에 길이없다. 즉 여기서 길이 하나 끊긴다는 말이다.

그럼 0 과 1을 잇는 선이 있을 것이다. (여기까지가 solution 의 for문 안에서 dfs가 1번 실행된 것이다.

그럼 방문하지 않은 곳은 2번부터이니 

2번부터 또 따라가본다. 2번을 보면 자기 자신외엔 연결된 길이 없다.

그럼 0,1은 길이 있고 2는 독립이다 그럼 네트워크가 2개가 된다. 

