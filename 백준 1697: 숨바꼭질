숨바꼭질 성공다국어
한국어   

 
시간 제한메모리 제한제출정답맞힌 사람정답 비율
2 초	128 MB	141992	40283	25216	25.044%
문제
수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 순간이동을 하는 경우에는 1초 후에 2*X의 위치로 이동하게 된다.

수빈이와 동생의 위치가 주어졌을 때, 수빈이가 동생을 찾을 수 있는 가장 빠른 시간이 몇 초 후인지 구하는 프로그램을 작성하시오.

입력
첫 번째 줄에 수빈이가 있는 위치 N과 동생이 있는 위치 K가 주어진다. N과 K는 정수이다.

출력
수빈이가 동생을 찾는 가장 빠른 시간을 출력한다.

예제 입력 1 복사
5 17
예제 출력 1 복사
4
힌트
수빈이가 5-10-9-18-17 순으로 가면 4초만에 동생을 찾을 수 있다.

출처


코드

#include <iostream>
#include <string>
#include <algorithm>
#include <queue>
#include <vector>
using namespace std;

bool visited[100001];

int main() {
    int n, m;
    cin >> n >> m;
    queue<pair<int, int>> q;//앞에는 현재 값을 뒤에는 연산 횟수를 담는다.
    int answer = 0;
    visited[n] = true;
    q.push({ n,0 });

    while (!q.empty()) {
        int cur =q.front().first;
        int cnt = q.front().second;
        q.pop();

        if (cur == m) {
            answer = cnt;
            break;
        }

        int a = cur - 1;
        int b = cur + 1;
        int c = cur * 2;

        if (0 <= a && visited[a]==false) {
            visited[a] = true;
            q.push({ a, cnt + 1 });
        }

        if (b <= m && visited[b]==false) {
            visited[b] = true;
            q.push({b, cnt + 1});
        }

        if (c <= m + 1 && visited[c] == false) {
            visited[c] = true;
            q.push({ c, cnt + 1 });
        }
    }
    cout << answer << endl;

    return 0;
}
