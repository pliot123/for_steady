이 문제는 이분 탐색 문제이다. 우선 문제 풀기전에


이진,이분 탐색 코드부터 한번 짜봤다. 이진탐색 문제를 실제로 푸는 것은 거의 처음이다.



이제 문제를 보자!

입국심사
문제 설명
n명이 입국심사를 위해 줄을 서서 기다리고 있습니다. 각 입국심사대에 있는 심사관마다 심사하는데 걸리는 시간은 다릅니다.

처음에 모든 심사대는 비어있습니다. 한 심사대에서는 동시에 한 명만 심사를 할 수 있습니다. 가장 앞에 서 있는 사람은 비어 있는 심사대로 가서 심사를 받을 수 있습니다. 하지만 더 빨리 끝나는 심사대가 있으면 기다렸다가 그곳으로 가서 심사를 받을 수도 있습니다.

모든 사람이 심사를 받는데 걸리는 시간을 최소로 하고 싶습니다.

입국심사를 기다리는 사람 수 n, 각 심사관이 한 명을 심사하는데 걸리는 시간이 담긴 배열 times가 매개변수로 주어질 때, 모든 사람이 심사를 받는데 걸리는 시간의 최솟값을 return 하도록 solution 함수를 작성해주세요.

제한사항
입국심사를 기다리는 사람은 1명 이상 1,000,000,000명 이하입니다.
각 심사관이 한 명을 심사하는데 걸리는 시간은 1분 이상 1,000,000,000분 이하입니다.
심사관은 1명 이상 100,000명 이하입니다.
입출력 예ntimesreturn
6	[7, 10]	28
입출력 예 설명
가장 첫 두 사람은 바로 심사를 받으러 갑니다.

7분이 되었을 때, 첫 번째 심사대가 비고 3번째 사람이 심사를 받습니다.

10분이 되었을 때, 두 번째 심사대가 비고 4번째 사람이 심사를 받습니다.

14분이 되었을 때, 첫 번째 심사대가 비고 5번째 사람이 심사를 받습니다.

20분이 되었을 때, 두 번째 심사대가 비지만 6번째 사람이 그곳에서 심사를 받지 않고 1분을 더 기다린 후에 첫 번째 심사대에서 심사를 받으면 28분에 모든 사람의 심사가 끝납니다.

출처

불러오는 중입니다...


코드

#include <string>
#include <vector>
#include <algorithm>
using namespace std;

long long solution(int n, vector<int> times) {
    long long start = 1;

    sort(times.begin(), times.end());

    int last_idx = times.size()-1;
    long long end = (long long) times[last_idx] * n;
    long long answer=987654321;

    while(start <=end){
        long long mid = (start+end) / 2;
        long long cnt = 0;
        for(int i=0; i<=last_idx;i++)
            cnt += mid/times[i];

    if (cnt >= n) {
            answer = mid;
            end = mid - 1;
        }
        else start = mid + 1;


    }
    return answer;
}
end의 우변에서 값을 받아 좌변으로 넘겨줄 때 long long 형 변환 안해서 코드를 2번이나 다시 짯따 그림도 그려보고


무튼 알았으니 됬따.. 

푸는 법은 mid를 기준으로 몇명을 몇명을 수용할 수 있는지  

검사 하고 최소값을 구하면 된다!

만약 mid가 29이라면?

29분안에 7은 28까지 4명 10은 3명 총 7명을 상담할 수 있다.

그러면 범위를 줄여서 

15분 29분의 mid 22라면?

7 * 3 =21 10*2 =20해서 5명수용이 가능하다

그럼 또 범위를 23 29로 옮기면 mid는 26이되고

7 * 3 =21 10*2 =20해서 5명수용이 가능하다

그럼 또 범위를 27 9로 옮기면 mid는 28이 되고

7 * 4 =21 10*2 =20해서 6명수용이 가능하다
