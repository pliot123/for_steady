#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <math.h>

using namespace std;

vector<int> solution(vector<int> progresses, vector<int> speeds) {
    queue<int> q;
    vector<int> answer;
    vector<int> day;//남은 일자 벡터
    int a=0;//남은 일자

    int size = progresses.size();

    for (int i = 0; i < size; i++)
    {
        a = ceil((100 - progresses[i]) / speeds[i]);
        day.push_back(a);
        //cout << a << ' ';
    }

    answer.push_back(1);

    int j = 2;
    int i = 1;
    
    while (1)
    {
        int cnt = 1;
        if(day[i] > day[j])
        {
            while (day[i] > day[j])
            {
                cnt++; j++;
                if (j >= size)
                {
                    answer.push_back(cnt);
                    break;
            
                }
            }
            if (j < size)
            {
                answer.push_back(cnt);
            }

            i = i + cnt;
            j = i + 1;
        }
        
        if (j >= size)
            break;
    }

    for (int i = 0; i < answer.size(); i++)
    {
        cout << answer[i] << ' ';
    }

    return answer;
}
//이렇게 풀었는데 시간초과가 나온당..

#include <string>
#include <vector>
#include <queue>
#include <iostream>
    #include <math.h>

using namespace std;

vector<int> solution(vector<int> progresses, vector<int> speeds) {
    queue<int> q;
    vector<int> answer;
    vector<int> day;//남은 일자 벡터
    int a=0;//남은 일자

    int size = progresses.size();

    for (int i = 0; i < size; i++)
    {
        a = ceil((100 - progresses[i]) / speeds[i]);
        day.push_back(a);
        //cout << a << ' ';
    }
    q.push(day[0]);

    for (int i = 1; i < day.size(); i++) 
    { 
        if (q.front() >= day[i]) 
        { 
            q.push(day[i]); 
        } 
        else {
            answer.push_back(q.size()); 
            while (!q.empty()) q.pop(); q.push(day[i]); 
        } 
    } 
    
    if (!q.empty()) answer.push_back(q.size()); 
    return answer;


}

int main(void)
{

    vector<int> progresses = { 95, 90, 99, 99, 80, 99};

    vector<int> speeds = { 1, 1, 1, 1, 1, 1 };

    vector<int> a=solution(progresses, speeds);

    return 0;
}

// 다른 사람 코드지만 비슷해서 가져왔다 이렇게 푸니까 훨씬 간편하고 좋다
