내리막 길 성공

 
시간 제한메모리 제한제출정답맞힌 사람정답 비율
2 초	128 MB	50597	13933	9942	28.128%
문제
여행을 떠난 세준이는 지도를 하나 구하였다. 이 지도는 아래 그림과 같이 직사각형 모양이며 여러 칸으로 나뉘어져 있다. 한 칸은 한 지점을 나타내는데 각 칸에는 그 지점의 높이가 쓰여 있으며, 각 지점 사이의 이동은 지도에서 상하좌우 이웃한 곳끼리만 가능하다.


현재 제일 왼쪽 위 칸이 나타내는 지점에 있는 세준이는 제일 오른쪽 아래 칸이 나타내는 지점으로 가려고 한다. 그런데 가능한 힘을 적게 들이고 싶어 항상 높이가 더 낮은 지점으로만 이동하여 목표 지점까지 가고자 한다. 위와 같은 지도에서는 다음과 같은 세 가지 경로가 가능하다.


 


 


지도가 주어질 때 이와 같이 제일 왼쪽 위 지점에서 출발하여 제일 오른쪽 아래 지점까지 항상 내리막길로만 이동하는 경로의 개수를 구하는 프로그램을 작성하시오.

입력
첫째 줄에는 지도의 세로의 크기 M과 가로의 크기 N이 빈칸을 사이에 두고 주어진다. 이어 다음 M개 줄에 걸쳐 한 줄에 N개씩 위에서부터 차례로 각 지점의 높이가 빈 칸을 사이에 두고 주어진다. M과 N은 각각 500이하의 자연수이고, 각 지점의 높이는 10000이하의 자연수이다.

출력
첫째 줄에 이동 가능한 경로의 수 H를 출력한다. 모든 입력에 대하여 H는 10억 이하의 음이 아닌 정수이다.

예제 입력 1 복사
4 5
50 45 37 32 30
35 50 40 20 25
30 30 25 17 28
27 24 22 15 10
예제 출력 1 복사
3
출처
Olympiad > 한국정보올림피아드 > 한국정보올림피아드시․도지역본선 > 지역본선 2006 > 고등부 3번

데이터를 추가한 사람: cgiosy, doju, kch616
문제의 오타를 찾은 사람: imgosari
잘못된 데이터를 찾은 사람: mygumi, tncks0121
tncks0121 정보

www.acmicpc.net


코드

#include<vector>
#include<iostream>
#include<memory.h>
using namespace std;
#pragma warning(disable : 4996)
int n, m;
int arr[501][501];
int visited[501][501];

int dy[4] = { 0,1,0,-1 };
int dx[4] = { 1,0,-1,0 };

int dfs(int y, int x) {
if (visited[y][x] != -1)return visited[y][x];
if (y < 0 || y>= n || x< 0 || x>= m) return 0;
if (y == 0 && x == 0) return 1;
visited[y][x] = 0;
for (int i = 0; i < 4; i++) {
int ny = y + dy[i];
int nx = x + dx[i];
if(arr[ny][nx] > arr[y][x])
visited[y][x] += dfs(ny, nx);
}
return visited[y][x];
}


int main() {
cin >> n >> m;
memset(visited, -1, sizeof(visited));

for (int i = 0; i < n; i++) {
for (int j = 0; j < m; j++) {
scanf("%d", &arr[i][j]);
}
}
cout << dfs(n-1, m-1);
return 0;
}

bfs와 dp가 합쳐진 문제였다. 근데 맨 끝에서부터 전개하는 방식으로 코드를 구성해야했다. 사실 이문제는 푸는 방법을 몰라서 인터넷을 찾아서 풀었는데 처음들어간 곳이 잘못된 코드를 올려놔서 2시간정도를 날렸다. 앞으로는 나도 여기 코드올리는것을 좀 신중하게 해야겠다.
