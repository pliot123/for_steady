프로그래머스 문제 줄여서(프문) 2022. 2. 18. 14:06
수정 | 비공개로 변경합니다 | 삭제
카펫
문제 설명
Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다.


Leo는 집으로 돌아와서 아까 본 카펫의 노란색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다.

Leo가 본 카펫에서 갈색 격자의 수 brown, 노란색 격자의 수 yellow가 매개변수로 주어질 때 카펫의 가로, 세로 크기를 순서대로 배열에 담아 return 하도록 solution 함수를 작성해주세요.

제한사항
갈색 격자의 수 brown은 8 이상 5,000 이하인 자연수입니다.
노란색 격자의 수 yellow는 1 이상 2,000,000 이하인 자연수입니다.
카펫의 가로 길이는 세로 길이와 같거나, 세로 길이보다 깁니다.
입출력 예brownyellowreturn
10	2	[4, 3]
8	1	[3, 3]
24	24	[8, 6]
출처

※ 공지 - 2020년 2월 3일 테스트케이스가 추가되었습니다.
※ 공지 - 2020년 5월 11일 웹접근성을 고려하여 빨간색을 노란색으로 수정하였습니다.

 

    가로 x, 세로 y일 때
    테두리의 타일 개수: 2 * x + (y-2) * 2 = 2 * x + 2 * y - 4 = brown
    가운데 노란색의 타일 개수 = x * y - brown = yellow

이 조건에 맞게 x와 y를 각각 하나씩 증가시켜가면서 조건에 둘 다 부합하는 yellow를 찾으면 된다.

코드 

#include <vector>
using namespace std;

vector<int> solution(int brown, int yellow) {
    vector<int> answer;
    for(int x=1; x<5000; x++){
        for(int y =1; y<=x; y++){
            if((2*x) + (2*y) -4 == brown)
            if((x * y) -brown ==yellow){
                answer.push_back(x);
                answer.push_back(y);
                return answer;
        }
    }
    }
    return answer;
}


