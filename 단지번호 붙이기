단지번호붙이기 성공

 
시간 제한메모리 제한제출정답맞힌 사람정답 비율
1 초	128 MB	108234	45792	28894	40.234%
문제
<그림 1>과 같이 정사각형 모양의 지도가 있다. 1은 집이 있는 곳을, 0은 집이 없는 곳을 나타낸다. 철수는 이 지도를 가지고 연결된 집의 모임인 단지를 정의하고, 단지에 번호를 붙이려 한다. 여기서 연결되었다는 것은 어떤 집이 좌우, 혹은 아래위로 다른 집이 있는 경우를 말한다. 대각선상에 집이 있는 경우는 연결된 것이 아니다. <그림 2>는 <그림 1>을 단지별로 번호를 붙인 것이다. 지도를 입력하여 단지수를 출력하고, 각 단지에 속하는 집의 수를 오름차순으로 정렬하여 출력하는 프로그램을 작성하시오.


입력
첫 번째 줄에는 지도의 크기 N(정사각형이므로 가로와 세로의 크기는 같으며 5≤N≤25)이 입력되고, 그 다음 N줄에는 각각 N개의 자료(0혹은 1)가 입력된다.

출력
첫 번째 줄에는 총 단지수를 출력하시오. 그리고 각 단지내 집의 수를 오름차순으로 정렬하여 한 줄에 하나씩 출력하시오.

예제 입력 1 복사
7
0110100
0110101
1110101
0000111
0100000
0111110
0111000
예제 출력 1 복사
3
7
8
9
출처


코드 





#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int arr[26][26];
bool visited[26][26];
int dy[4] = { 0,0,1,-1 };
int dx[4] = { 1,-1,0 ,0 };
int n;
int cnt;

void dfs(int y, int x) {
cnt++;
visited[y][x] = 1;
for (int i = 0; i < 4; i++) {
if (y + dy[i] >= n || y + dy[i] < 0 || x + dx[i] >= n || x + dx[i] < 0)continue;
if (visited[y + dy[i]][x + dx[i]] == false && arr[y + dy[i]][x + dx[i]]==1)
dfs(y + dy[i], x + dx[i]);
}
}

int main() {

cin >> n;

for (int i = 0; i < n; i++) {
for (int j = 0; j < n; j++) {
char a;
cin >> a;
arr[i][j] = a - '0';
}

}


vector<int> v;

for (int i = 0; i < n; i++) {
for (int j = 0; j < n; j++) {
cnt = 0;
if (visited[i][j] == false && arr[i][j] == 1) {
dfs(i, j);
v.push_back(cnt);
}
}
}
sort(v.begin(), v.end());
cout << v.size() << endl;

for (int i = 0; i < v.size(); i++) {
cout << v[i] << endl;
}

return 0;
}



메인 문에서 하나씩 순회를 시작하다가 

arr[i][j]가 1을 만나면 

거기서 dfs로 4방향으로 쭉쭉 뻗어나간다.

그러면서 카운트를 올려주고 dfs가 끝나면 

카운트를 vector에 담아준다.

벡터의 사이즈와 오름차순으로 출력해주면 끝
