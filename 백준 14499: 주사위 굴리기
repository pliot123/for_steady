주사위 굴리기 성공

 
시간 제한메모리 제한제출정답맞힌 사람정답 비율
2 초	512 MB	33732	14801	10437	42.972%
문제
크기가 N×M인 지도가 존재한다. 지도의 오른쪽은 동쪽, 위쪽은 북쪽이다. 이 지도의 위에 주사위가 하나 놓여져 있으며, 주사위의 전개도는 아래와 같다. 지도의 좌표는 (r, c)로 나타내며, r는 북쪽으로부터 떨어진 칸의 개수, c는 서쪽으로부터 떨어진 칸의 개수이다. 

  2
4 1 3
  5
  6
주사위는 지도 위에 윗 면이 1이고, 동쪽을 바라보는 방향이 3인 상태로 놓여져 있으며, 놓여져 있는 곳의 좌표는 (x, y) 이다. 가장 처음에 주사위에는 모든 면에 0이 적혀져 있다.

지도의 각 칸에는 정수가 하나씩 쓰여져 있다. 주사위를 굴렸을 때, 이동한 칸에 쓰여 있는 수가 0이면, 주사위의 바닥면에 쓰여 있는 수가 칸에 복사된다. 0이 아닌 경우에는 칸에 쓰여 있는 수가 주사위의 바닥면으로 복사되며, 칸에 쓰여 있는 수는 0이 된다.

주사위를 놓은 곳의 좌표와 이동시키는 명령이 주어졌을 때, 주사위가 이동했을 때 마다 상단에 쓰여 있는 값을 구하는 프로그램을 작성하시오.

주사위는 지도의 바깥으로 이동시킬 수 없다. 만약 바깥으로 이동시키려고 하는 경우에는 해당 명령을 무시해야 하며, 출력도 하면 안 된다.

입력
첫째 줄에 지도의 세로 크기 N, 가로 크기 M (1 ≤ N, M ≤ 20), 주사위를 놓은 곳의 좌표 x, y(0 ≤ x ≤ N-1, 0 ≤ y ≤ M-1), 그리고 명령의 개수 K (1 ≤ K ≤ 1,000)가 주어진다.

둘째 줄부터 N개의 줄에 지도에 쓰여 있는 수가 북쪽부터 남쪽으로, 각 줄은 서쪽부터 동쪽 순서대로 주어진다. 주사위를 놓은 칸에 쓰여 있는 수는 항상 0이다. 지도의 각 칸에 쓰여 있는 수는 10 미만의 자연수 또는 0이다.

마지막 줄에는 이동하는 명령이 순서대로 주어진다. 동쪽은 1, 서쪽은 2, 북쪽은 3, 남쪽은 4로 주어진다.

출력
이동할 때마다 주사위의 윗 면에 쓰여 있는 수를 출력한다. 만약 바깥으로 이동시키려고 하는 경우에는 해당 명령을 무시해야 하며, 출력도 하면 안 된다.

예제 입력 1 복사
4 2 0 0 8
0 2
3 4
5 6
7 8
4 4 4 1 3 3 3 2
예제 출력 1 복사
0
0
3
0
0
8
6
3
예제 입력 2 복사
3 3 1 1 9
1 2 3
4 0 5
6 7 8
1 3 2 2 4 4 1 1 3
예제 출력 2 복사
0
0
0
3
0
1
0
6
0
예제 입력 3 복사
2 2 0 0 16
0 2
3 4
4 4 4 4 1 1 1 1 3 3 3 3 2 2 2 2
예제 출력 3 복사
0
0
0
0
예제 입력 4 복사
3 3 0 0 16
0 1 2
3 4 5
6 7 8
4 4 1 1 3 3 2 2 4 4 1 1 3 3 2 2
예제 출력 4 복사
0
0
0
6
0
8
0
2
0
8
0
2
0
8
0
2
출처
문제를 만든 사람: baekjoon

코드

#include <vector>
#include <iostream>
using namespace std;
int n, m, x, y, k;
int arr[21][21];
int dy[4] = { 0,0,-1,1 };
int dx[4] = { 1,-1,0,0 };

vector<int> dice(6) ;//초기 주사위 설정
//0번은 위,1번은 앞,2번은 밑, 3번은 뒤, 4번은 왼쪽면, 5번은 오른쪽 면

void dice_left() {//다이스를 왼쪽으로 굴릴때
dice = {dice[5],dice[1],dice[4],dice[3],dice[0],dice[2] };
}
void dice_right() {//다이스를 오른쪽으로 굴릴때
dice = { dice[4],dice[1],dice[5],dice[3],dice[2],dice[0] };
}
void dice_forward() {//다이스를 앞쪽으로 굴릴때
dice = { dice[3],dice[0],dice[1],dice[2],dice[4],dice[5] };
}
void dice_backward() {//다이스를 뒤으로 굴릴때
dice = { dice[1],dice[2],dice[3],dice[0],dice[4],dice[5] };
}

void roll_dice(int cmd) {
switch (cmd) {
case 1:
dice_right();
break;
case 2:
dice_left();
break;
case 3:
dice_backward();
break;
case 4:
dice_forward();
break;
default:
break;
}
}
int main() {
cin >> n >> m >> y >> x >> k;

for (int i = 0; i < n; i++) {
for (int j = 0; j < m; j++) {
cin >> arr[i][j];
}
}

for (int i = 0; i < k; i++) {
int cmd;
cin >> cmd;
int ny = dy[cmd-1];
int nx = dx[cmd-1];
if (y + ny >= n || y + ny < 0 || x + nx >= m || x + nx < 0)continue;

y += ny;
x += nx;

roll_dice(cmd);
cout << dice[0] << '\n';
if (arr[y][x] == 0) {//이동한 칸에 쓰여 있는 수가 0이면, 주사위의 바닥면에 쓰여 있는 수가 칸에 복사된다
arr[y][x] = dice[2];
}
else//0이 아닌 경우에는 칸에 쓰여 있는 수가 주사위의 바닥면으로 복사되며, 칸에 쓰여 있는 수는 0이 된다.
{
dice[2] = arr[y][x];
arr[y][x] = 0;
}
}

return 0;
}

주사위를 만들면 꽤 유용하다. 하지만 이거 만들면서 독서실에서 현타가 쫌 왔다. 이거 만들고 각 면을 돌렸을 때 어떻게 구성이 바뀌는지를 함수로 만들어서 돌려주면 된다 .근데 문제에서 조금 조심할 점이 입력받을때 x,y순서로 받는다고 했지만 y,x순서로 받아야 답이나온다.
