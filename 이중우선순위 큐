이중우선순위큐
문제 설명
이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.

명령어수신 탑(높이)
I 숫자	큐에 주어진 숫자를 삽입합니다.
D 1	큐에서 최댓값을 삭제합니다.
D -1	큐에서 최솟값을 삭제합니다.
이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때, 모든 연산을 처리한 후 큐가 비어있으면 [0,0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.

제한사항
operations는 길이가 1 이상 1,000,000 이하인 문자열 배열입니다.
operations의 원소는 큐가 수행할 연산을 나타냅니다.
원소는 “명령어 데이터” 형식으로 주어집니다.- 최댓값/최솟값을 삭제하는 연산에서 최댓값/최솟값이 둘 이상인 경우, 하나만 삭제합니다.
빈 큐에 데이터를 삭제하라는 연산이 주어질 경우, 해당 연산은 무시합니다.
입출력 예operationsreturn
["I 16","D 1"]	[0,0]
["I 7","I 5","I -5","D -1"]	[7,5]
입출력 예 설명
16을 삽입 후 최댓값을 삭제합니다. 비어있으므로 [0,0]을 반환합니다.
7,5,-5를 삽입 후 최솟값을 삭제합니다. 최대값 7, 최소값 5를 반환합니다.

출처

코드 

#include <string>
#include <vector>
#include <queue>
#include <iostream>
using namespace std;
vector<int> answer;
vector<int> solution(vector<string> operations) {


    priority_queue<int, vector<int>, greater<int>> pq_min;
    priority_queue<int> pq_max;
    int cnt = 0;
    for (int i = 0; i < operations.size(); i++) {
        if (operations[i][0] == 'I')
        {
            cnt++;
            pq_min.push(stoi(operations[i].substr(2)));
            pq_max.push(stoi(operations[i].substr(2)));
        }
        else if (operations[i][0] == 'D') {
            cnt--;
            if (operations[i][2] == '-') {
                if (!pq_min.empty())
                    pq_min.pop();
            }
            else
                if (!pq_max.empty())
                    pq_max.pop();
        }
        if (cnt <=0) {
            while (!pq_max.empty()) pq_max.pop();
            while (!pq_min.empty()) pq_min.pop();
            cnt = 0;
        }
    }
    if (cnt <= 0) {//cnt가 0보다 작거나 같으면 삽입된 것보다 삭제된 게 더 많다는 소리 따라서 
        //이중우선순위큐에는 하나도 남지 않아야한다.
        answer.push_back(0);
        answer.push_back(0);
    }
    else {
        answer.push_back(pq_max.top());
        answer.push_back(pq_min.top());
    }

    return answer;
}

우선 순위큐 2개를 사용해서 하나는 내림차순 하나는 오름차순으로

오름차순의 top()에는 최솟값 내림차순 top()에는 최댓값을 넣고 마지막에 answer에 리턴하면된다.



근데 문제는 이중우선순위큐라고 가상의 큐 하나에서 입출력이 발생하기때문에 D가 들어온 갯수가 I가 들어온 갯수를 넘어버린다면 우리가 설정한 2개의 큐를 완전히 싹 비워줘야한다.

